// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String?   @unique
  email     String    @unique
  password  String
  socket    String?      @unique
  connect   Boolean   @default(false)
  createdAt DateTime  @default(now())
  conversation Conversation[] @relation("UserConversations")
  admins Conversation[] @relation("ConversationAdmins")
  blockedUsers     User[]          @relation("Blocks")
  blockingUsers    User[]          @relation("Blocks")
  message Messages[] @relation("UserMessages") 
  BannConv Conversation[] @relation("Bann")
    
}

model Conversation {
  id        Int      @id @default(autoincrement())
  recipient      String @unique
  password  String? 
  privacy  Boolean @default(false)
  Participant User[] @relation("UserConversations")
  Admins      User[] @relation("ConversationAdmins")
  usersMuted    MutedUser[]   @relation("ConversationMutedUser")
  message Messages[] 
  creatorid Int?
  bannUsers User[]    @relation("Bann")
}

model MutedUser {
  id                Int           @id @default(autoincrement())
  userId            Int
   conversation      Conversation  @relation("ConversationMutedUser", fields: [conversationId], references: [id])
  conversationId    Int
  muteEndTime     DateTime @default(now()) 
}

model Messages {
  id           Int          @id @default(autoincrement())
  createdAt DateTime  @default(now())
  content      String
  sender       User         @relation("UserMessages", fields: [senderId], references: [id])
  senderId     Int
  conversation Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
}